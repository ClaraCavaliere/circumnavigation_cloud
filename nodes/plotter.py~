#! /usr/bin/python 

import rospy as rp 
import geomtwo.msg as gms
import numpy as np
import threading as thd
import copy as cp 

import matplotlib.pyplot as plt

rp.init_node('plotter')


RATE = rp.Rate(3.0e1)

AGENT_COLOR = rp.get_param('agent_color')
TARGET_COLOR = rp.get_param('target_color')

#AGENT_NAME = rp.get_param('agent_names')
TARGET_POSITION = rp.get_param('target_position')



LOCK = thd.Lock()

plt.ion()
plt.figure()
plt.scatter(*TARGET_POSITION, color=TARGET_COLOR)
plt.axis('equal')
plt.grid(True)
plt.draw()

agent_position = None
agent_artist = None

def agent_callback(msg):
    global agent_position
    LOCK.acquire()
    agent_position =  np.array([msg.x, msg.y])
    LOCK.release()
rp.Subscriber(
    name = 'position',
    data_class = gms.Point,
    callback = agent_callback,
    queue_size = 1)

while not rp.is_shutdown():
    ag_pos = None
    LOCK.acquire()
    if not agent_position is None:
       ag_pos = cp.copy(agent_position)
       agent_position = None
    LOCK.release()
    if not ag_pos is None:
       if not agent_artist is None:
             agent_artist.remove()
       agent_artist = plt.scatter(*ag_pos, color=AGENT_COLOR)
    plt.draw()
    RATE.sleep()


